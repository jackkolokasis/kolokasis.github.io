
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"I am a 4th-year PhD student in the Computer Science Department at the University of Crete, working with Prof. Angelos Bilas. I am also a graduate research assistant in the Institute of Computer Science (ICS) at the Foundation of Research and Technology - Hellas (FORTH). I received my Bachelor’s and Master’s degrees in Computer Science from the University of Crete in 2017 and 2020, respectively. My main research interests fall at the intersection of managed programming languages and runtimes, memory, and storage systems. My work focuses on exploiting emerging non-volatile memories and fast block-addressable storage devices to improve heap efficiency in managed languages for data warehouse workloads, such as big-data analytics frameworks. My recent work resolves the tension between garbage collection and serialization/deserialization by providing a separate scanless managed heap over storage devices. It eliminates both garbage collection and serialization overheads without imposing any language restrictions.\nI am honored that my current work, during my doctoral studies, was awarded with the Meta Research PhD Fellowship (2022-2024) and the State Scholarship Foundation of Cyprus (2020-2023).\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am a 4th-year PhD student in the Computer Science Department at the University of Crete, working with Prof. Angelos Bilas. I am also a graduate research assistant in the Institute of Computer Science (ICS) at the Foundation of Research and Technology - Hellas (FORTH).","tags":null,"title":"Iacovos Kolokasis","type":"authors"},{"authors":[],"categories":null,"content":"","date":1713894300,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1713894300,"objectID":"0c6b8d11ece0615c92517f125341fddb","permalink":"https://jackkolokasis.com/talk/dynaheap-dynamic-dram-partitioning-between-managed-heap-and-page-cache/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/dynaheap-dynamic-dram-partitioning-between-managed-heap-and-page-cache/","section":"event","summary":"Popular big data frameworks running on top of managed runtimes must process datasets that typically outgrow DRAM capacity. Existing approaches extend the managed heap over slow but high-capacity media other than DRAM. The state-of-the-art avoids costly garbage collection (GC) scans over the slow tier using two managed heaps, one in each tier. They use a DRAM (I/O) cache to offer fast access to objects in the slow tier. However, existing systems partition DRAM between the DRAM heap and I/O cache statically, requiring tedious hand-tuning, which is impractical in real-life deployments and cannot adapt to dynamically changing application behavior. This talk presents DynaHeap to address the problem of dynamically dividing a fixed DRAM budget between the DRAM heap and I/O cache for the slow tier. DynaHeap relies on three concepts: (1) it considers GC and I/O costs for periodically (re)partitioning DRAM, (2) it eliminates hand-tuned configurations using an adaptation mechanism that maintains a suitable division of DRAM without application knowledge, and (3) it flexibly adapts to applications behavior. We evaluate DynaHeap compared to TeraHeap, a state-of-the-art dual-heap managed runtime system, using three real-world analytics frameworks\\: Spark, Giraph, and GDS-Neo4j. DynaHeap dynamically adjusts to applications memory needs for DRAM heap and I/O cache, improving performance compared to TeraHeap. In DRAM-constrained datacenter environments in particular, DynaHeap outperforms DynaHeap by up to 3.9x.","tags":[],"title":"DynaHeap: Dynamic DRAM Partitioning Between Managed Heap and Page Cache","type":"event"},{"authors":[],"categories":null,"content":"","date":1713798900,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1713798900,"objectID":"de6c48d80aad99ce29a31261c0c04070","permalink":"https://jackkolokasis.com/talk/gatekeeper-transparent-placement-of-big-data-objects-in-hybrid-managed-heaps/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/gatekeeper-transparent-placement-of-big-data-objects-in-hybrid-managed-heaps/","section":"event","summary":"Popular big data frameworks running on top of managed runtimes must process datasets that typically outgrow DRAM capacity. Existing approaches extend the man- aged heap over slow but high-capacity media other than DRAM, such as NVMe SSDs. The state-of-the-art avoids costly garbage collection (GC) scans over the slow tier using two managed heaps, one in each tier. They use a DRAM (I/O) cache to offer fast access to objects in the slow tier. Nevertheless, these systems encounter signif- icant hurdles in determining which objects to migrate to the slow tier. One approach within existing systems relies on programming models or hints, demanding additional user effort and necessitating the rewriting of legacy frameworks, which is impractical in real-life deployments. An alternative category of systems identifies, transparently at runtime, the objects to move to the slow tier based on their object hotness. However, these solutions require costly code instrumentation, leading to a slowdown in application performance.","tags":[],"title":"GateKeeper: Transparent Placement of Big Data Objects in Hybrid Managed Heaps","type":"event"},{"authors":[],"categories":null,"content":"","date":1713434400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1713434400,"objectID":"f84959fae15d2fd3a0f64be55c0bf2b1","permalink":"https://jackkolokasis.com/talk/dynamic-dram-partitioning-between-managed-heap-and-page-cache/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/dynamic-dram-partitioning-between-managed-heap-and-page-cache/","section":"event","summary":"Popular big data frameworks running on top of managed runtimes must process datasets that typically outgrow DRAM capacity. Existing approaches extend the managed heap over slow but high-capacity media other than DRAM. The state-of-the-art avoids costly garbage collection (GC) scans over the slow tier using two managed heaps, one in each tier. They use a DRAM (I/O) cache to offer fast access to objects in the slow tier. However, existing systems partition DRAM between the DRAM heap and I/O cache statically, requiring tedious hand-tuning, which is impractical in real-life deployments and cannot adapt to dynamically changing application behavior. This talk presents DynaHeap to address the problem of dynamically dividing a fixed DRAM budget between the DRAM heap and I/O cache for the slow tier. DynaHeap relies on three concepts: (1) it considers GC and I/O costs for periodically (re)partitioning DRAM, (2) it eliminates hand-tuned configurations using an adaptation mechanism that maintains a suitable division of DRAM without application knowledge, and (3) it flexibly adapts to applications behavior. We evaluate DynaHeap compared to TeraHeap, a state-of-the-art dual-heap managed runtime system, using three real-world analytics frameworks\\: Spark, Giraph, and GDS-Neo4j. DynaHeap dynamically adjusts to applications memory needs for DRAM heap and I/O cache, improving performance compared to TeraHeap. In DRAM-constrained datacenter environments in particular, DynaHeap outperforms DynaHeap by up to 3.9x.","tags":[],"title":"Dynamic DRAM Partitioning Between Managed Heap and Page Cache","type":"event"},{"authors":null,"categories":null,"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;) print(\u0026#34;Welcome to Academic!\u0026#34;) Welcome to Academic! Organize your notebooks Place the notebooks that you would like to publish in a notebooks folder at the root of your website.\nImport the notebooks into your site pipx install academic academic import \u0026#39;notebooks/**.ipynb\u0026#39; content/post/ --verbose The notebooks will be published to the folder you specify above. In this case, they will be published to your content/post/ folder.\n","date":1699056000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1699056000,"objectID":"94fa5e486d3bf3e0941e2ff6e7126c06","permalink":"https://jackkolokasis.com/post/blog-with-jupyter/","publishdate":"2023-11-04T00:00:00Z","relpermalink":"/post/blog-with-jupyter/","section":"post","summary":"Easily blog from Jupyter notebooks!","tags":null,"title":"Blog with Jupyter Notebooks!","type":"post"},{"authors":[],"categories":null,"content":"","date":1698170400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1698170400,"objectID":"2b3fd9f0f47e37fd1a7ef553438e9f1b","permalink":"https://jackkolokasis.com/talk/dynaheap-dynamic-division-of-dram-between-heterogeneous-managed-heaps/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/dynaheap-dynamic-division-of-dram-between-heterogeneous-managed-heaps/","section":"event","summary":"Popular big data frameworks running on top of managed runtimes must process datasets that typically outgrow DRAM capacity. Existing approaches extend the managed heap over slow but high-capacity media other than DRAM. The state-of-the-art avoids costly garbage collection (GC) scans over the slow tier using two managed heaps, one in each tier. They use a DRAM (I/O) cache to offer fast access to objects in the slow tier. However, existing systems partition DRAM between the DRAM heap and I/O cache statically, requiring tedious hand-tuning, which is impractical in real-life deployments and cannot adapt to dynamically changing application behavior. This talk presents DynaHeap to address the problem of dynamically dividing a fixed DRAM budget between the DRAM heap and I/O cache for the slow tier. DynaHeap relies on three concepts: (1) it considers GC and I/O costs for periodically (re)partitioning DRAM, (2) it eliminates hand-tuned configurations using an adaptation mechanism that maintains a suitable division of DRAM without application knowledge, and (3) it flexibly adapts to applications behavior. We evaluate DynaHeap compared to TeraHeap, a state-of-the-art dual-heap managed runtime system, using three real-world analytics frameworks\\: Spark, Giraph, and GDS-Neo4j. DynaHeap dynamically adjusts to applications memory needs for DRAM heap and I/O cache, improving performance compared to TeraHeap. In DRAM-constrained datacenter environments in particular, DynaHeap outperforms DynaHeap by up to 3.9x.","tags":[],"title":"DynaHeap: Dynamic Division of DRAM between Heterogeneous Managed Heaps","type":"event"},{"authors":["Iacovos G. Kolokasis","Giannos Evdorou","Shoaib Akram","Christos Kozanitis","Anastasios Papagiannis","Foivos S. Zakkak","Polyvios Pratikakis","Angelos Bilas"],"categories":null,"content":"","date":1640995200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1640995200,"objectID":"31a07e61a26370334ae4cb82dbe2e4e7","permalink":"https://jackkolokasis.com/publication/kolokasis_2023_teraheap/","publishdate":"2023-12-14T15:35:32.918245Z","relpermalink":"/publication/kolokasis_2023_teraheap/","section":"publication","summary":"","tags":null,"title":"TeraHeap: Reducing Memory Pressure in Managed Big Data Frameworks","type":"publication"},{"authors":[],"categories":null,"content":"","date":1616584200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1616584200,"objectID":"36a44703fa30f15315fbb9837098aabe","permalink":"https://jackkolokasis.com/talk/teracache-efficient-caching-over-fast-storage-devices/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/teracache-efficient-caching-over-fast-storage-devices/","section":"event","summary":"Many analytics computations are dominated by iterative processing stages, executed until a convergence condition is met. To accelerate such workloads while keeping up with the exponential growth of data and the slow scaling of DRAM capacity, Spark employs o↵-heap caching of intermediate results. However, o↵- heap caching requires serialization and deserialization (serdes) of data that add significant overhead especially with growing datasets. This thesis proposes TeraCache, an extension of the Spark data cache that avoids the need of serdes by keeping all cached data on-heap but o↵-memory, using memory-mapped I/O (mmio). To achieve this, TeraCache extends the original JVM heap with a managed heap that resides on a memory-mapped fast storage device and is exclusively used for cached data. Preliminary results show that the TeraCache prototype can speed up Machine Learning (ML) workloads that cache intermediate results by up to 37% compared to the state-of-the-art serdes approach.","tags":[],"title":"TeraCache: Efficient Caching over Fast Storage Devices","type":"event"},{"authors":["Iacovos Kolokasis","吳恩達"],"categories":["Demo","教程"],"content":"import libr print(\u0026#39;hello\u0026#39;) Overview The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more Get Started 👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem Hugo Academic CLI: Automatically import publications from BibTeX Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files. Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://jackkolokasis.com/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Hugo Blox Builder, the website builder for Hugo","type":"post"},{"authors":[],"categories":null,"content":"","date":1605784200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1605784200,"objectID":"f802b201e7ae5b206126a8b67cc25a35","permalink":"https://jackkolokasis.com/talk/teracache-efficient-caching-over-fast-storage-devices/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/teracache-efficient-caching-over-fast-storage-devices/","section":"event","summary":"This talk will introduce TeraCache, a new scalable cache for Spark that avoids both garbage collection (GC) and serialization overheads. Existing Spark caching options incur either significant GC overheads for large managed heaps over persistent memory or significant serialization overheads to place objects off-heap on large storage devices. Our analysis shows that: (1) serialization increases execution time by up to 30% and (2) caching on the managed heap increases GC time by 20%. In addition, these overheads become worse as datasets grow. TeraCache eliminates serialization and GC overhead for cached objects. To achieve this, TeraCache extends HotSpot JVM’s heap with a managed heap that resides on a memory-mapped fast storage device and is exclusively used for cached data. To avoid GC over TeraCache, we extend the Java runtime to use semantic hints from Spark allocating and freeing cached data objects. We modify the collector to not include cached objects, while maintaining safety. Preliminary results show that TeraCache can speed up ML workloads by up to 37% compared to the supported RDD storage levels.","tags":[],"title":"TeraCache: Efficient Caching over Fast Storage Devices","type":"event"},{"authors":["Iacovos G. Kolokasis","Anastasios Papagiannis","Foivos S. Zakkak","Polyvios Pratikakis","Angelos Bilas"],"categories":null,"content":"","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577836800,"objectID":"ec3f07d192381b38164f02fe71ff69d3","permalink":"https://jackkolokasis.com/publication/kolokasis_2020_teracache/","publishdate":"2023-12-14T15:35:32.918245Z","relpermalink":"/publication/kolokasis_2020_teracache/","section":"publication","summary":"","tags":null,"title":"Say Goodbye to Off-heap Caches! On-heap Caches Using Memory-Mapped I/O","type":"publication"},{"authors":null,"categories":null,"content":"Hugo Blox Builder is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you’ll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python import pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() ``` renders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n```markmap {height=\u0026#34;200px\u0026#34;} - Hugo Modules - wowchemy - blox-plugins-netlify - blox-plugins-netlify-cms - blox-plugins-reveal ``` renders as\n- Hugo Modules - wowchemy - blox-plugins-netlify - blox-plugins-netlify-cms - blox-plugins-reveal A more advanced mindmap with formatting, code blocks, and math:\n```markmap - Mindmaps - Links - [Wowchemy Docs](https://docs.hugoblox.com/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/HugoBlox/hugo-blox-builder) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ ``` renders as\n- Mindmaps - Links - [Wowchemy Docs](https://docs.hugoblox.com/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/HugoBlox/hugo-blox-builder) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ Charts Wowchemy supports the popular Plotly format for interactive charts.\nSave your Plotly JSON in your page folder, for example line-chart.json, and then add the {{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\nYou might also find the Plotly JSON Editor useful.\nMath Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.yaml file.\nTo render inline or block math, wrap your LaTeX math with {{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}} or {{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}, respectively. (We wrap the LaTeX math in the Wowchemy math shortcode to prevent Hugo rendering our math as Markdown. The math shortcode is new in v5.5-dev.)\nExample math block:\n{{\u0026lt; math \u0026gt;}} $$ \\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$ Example inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$ f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases} $$ Diagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ``` renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ``` renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ``` renders as\ngantt section …","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://jackkolokasis.com/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Hugo Blox Builder is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Markdown","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Hugo Blox Builder Hugo Blox Builder | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://jackkolokasis.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Hugo Blox Builder's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Iacovos G. Kolokasis","Polyvios Pratikakis"],"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"8471373dc1b047f8fe36fb851826d8ce","permalink":"https://jackkolokasis.com/publication/kolokasis_2019_partitioner/","publishdate":"2023-12-14T15:35:32.918245Z","relpermalink":"/publication/kolokasis_2019_partitioner/","section":"publication","summary":"","tags":null,"title":"Cut to Fit: Tailoring the Partitioning to the Computation","type":"publication"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d3d876fa3373dac8db7f2f8cb84a80d1","permalink":"https://jackkolokasis.com/project/teraheap/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/teraheap/","section":"project","summary":"TeraHeap extends the JVM to use a second, high-capacity heap over a fast storage device that coexists with the regular heap. TeraHeap provides direct access to objects on the second heap. It also reduces GC cost by fencing the garbage collector from scanning the second heap. TeraHeap leverages frameworks’ property of choosing specific objects for off-heap placement and offers frameworks a hint-based interface for moving such objects to the second heap.","tags":["Java Virtual Machines"],"title":"TeraHeap: Reducing Memory Pressure in Managed Big Data Frameworks","type":"project"}]